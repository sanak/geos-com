<?xml version="1.0"?>
<package>
<job>
<script language="VBScript" src="common.vbs"/>
<script language="VBScript" src="test_helper.vbs"/>
<script language="VBScript">
Option Explicit
'On Error Resume Next ' TODO:

Class TestGeosCombinations
	Private testHelper
	Sub Class_Initialize()
		Set testHelper = New GeosTestHelper
		
		setup "testUnion": testUnion
		setup "testIntersection": testIntersection
		setup "testDifference": testDifference
		setup "testSymDifference": testSymDifference
		report
	End Sub
	
	Sub testUnion()
		Dim geoms1, geoms2
		geoms1 = testHelper.createGeoms()
		geoms2 = testHelper.createGeoms()
		
		Dim i, j
		For i = LBound(geoms1) To UBound(geoms1)
			For j = LBound(geoms2) To UBound(geoms2)
				Dim expected, result
				Set result = geoms1(i).Union(geoms2(j))
				' TODO:
			Next
		Next
	End Sub
	
	Sub testIntersection()
		Dim geoms1, geoms2
		geoms1 = testHelper.createGeoms()
		geoms2 = testHelper.createGeoms()
		
		Dim i, j
		For i = LBound(geoms1) To UBound(geoms1)
			For j = LBound(geoms2) To UBound(geoms2)
				Dim expected, result
				Set result = geoms1(i).intersection(geoms2(j))
				' TODO:
			Next
		Next
	End Sub
	
	Sub testDifference()
		Dim geoms1, geoms2
		geoms1 = testHelper.createGeoms()
		geoms2 = testHelper.createGeoms()
		
		Dim i, j
		For i = LBound(geoms1) To UBound(geoms1)
			For j = LBound(geoms2) To UBound(geoms2)
				Dim expected, result
				Set result = geoms1(i).difference(geoms2(j))
				' TODO:
			Next
		Next
	End Sub
	
	Sub testSymDifference()
		Dim geoms1, geoms2
		geoms1 = testHelper.createGeoms()
		geoms2 = testHelper.createGeoms()
		
		Dim i, j
		For i = LBound(geoms1) To UBound(geoms1)
			For j = LBound(geoms2) To UBound(geoms2)
				Dim expected, result
				Set result = geoms1(i).symDifference(geoms2(j))
				' TODO:
			Next
		Next
	End Sub
End Class

Dim test
Set test = New TestGeosCombinations

</script>
</job>
</package>
