/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.37
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

import "oaidl.idl";

[
  uuid(28d0d0e2-75e0-5b3f-9621-bc0ccd3dad79),
  version(1.0)
]
library geosTLB {

  importlib("stdole2.tlb");

  interface ICoordinateSequence;
  interface ICoordinateSequenceStatic;
  interface IGeometry;
  interface IPoint;
  interface IPointStatic;
  interface ILineString;
  interface ILinearRing;
  interface IPolygon;
  interface IGeometryCollection;
  interface IMultiPoint;
  interface IMultiLineString;
  interface IMultiLinearRing;
  interface IMultiPolygon;
  interface IWktReader;
  interface IWktReaderStatic;
  interface IWktWriter;
  interface IWktWriterStatic;
  interface IWkbReader;
  interface IWkbReaderStatic;
  interface IWkbWriter;
  interface IWkbWriterStatic;
//  interface ISWIGTYPE_p_unsigned_char;
//  interface ISWIGTYPE_p_p_GeosLinearRing;

  [
    object,
    local,
    uuid(1e2792f9-b414-5d84-bca5-6ad67eec8ad3),
    dual
  ]
  interface Igeos : IDispatch {
    [ propget ]
    HRESULT GEOS_VERSION_MAJOR([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_VERSION_MINOR([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_VERSION_PATCH([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_VERSION([ retval, out ] BSTR*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_JTS_PORT([ retval, out ] BSTR*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_CAPI_VERSION_MAJOR([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_CAPI_VERSION_MINOR([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_CAPI_VERSION_PATCH([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_CAPI_FIRST_INTERFACE([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_CAPI_LAST_INTERFACE([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_CAPI_VERSION([ retval, out ] BSTR*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_POINT([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_LINESTRING([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_LINEARRING([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_POLYGON([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_MULTIPOINT([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_MULTILINESTRING([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_MULTIPOLYGON([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_GEOMETRYCOLLECTION([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_WKB_XDR([ retval, out ] int*SWIG_result_ptr);
    [ propget ]
    HRESULT GEOS_WKB_NDR([ retval, out ] int*SWIG_result_ptr);
    HRESULT version([ retval, out ] BSTR*SWIG_result_ptr);
    [ propget]
    HRESULT CoordinateSequence([ retval, out ] ICoordinateSequenceStatic **SWIG_result);
    HRESULT createPoint(ICoordinateSequence * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT createLineString(ICoordinateSequence * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT createLinearRing(ICoordinateSequence * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
//    HRESULT createPolygon(ILinearRing * arg0, ISWIGTYPE_p_p_GeosLinearRing * arg1, long arg2, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT createPolygon(ILinearRing * arg0, VARIANT arg1, [ retval, out ] IGeometry **SWIG_result_ptr);
    [ propget]
    HRESULT WktReader([ retval, out ] IWktReaderStatic **SWIG_result);
    [ propget]
    HRESULT WktWriter([ retval, out ] IWktWriterStatic **SWIG_result);
    [ propget]
    HRESULT WkbReader([ retval, out ] IWkbReaderStatic **SWIG_result);
    [ propget]
    HRESULT WkbWriter([ retval, out ] IWkbWriterStatic **SWIG_result);
  };

  [
    uuid(37091295-e126-5e8f-b293-eab4783b6033)
  ]
  coclass geos {
    interface Igeos;
  };

  [
    object,
    local,
    uuid(ade7da6d-5ebb-5ed0-9d7b-24d0f1bdb9b3),
    dual
  ]
  interface ICoordinateSequence : IDispatch {
    HRESULT clone([ retval, out ] ICoordinateSequence **SWIG_result_ptr);
    HRESULT setX(long arg0, double arg1, [ retval, out ] int*SWIG_result_ptr);
    HRESULT setY(long arg0, double arg1, [ retval, out ] int*SWIG_result_ptr);
    HRESULT setZ(long arg0, double arg1, [ retval, out ] int*SWIG_result_ptr);
    HRESULT setOrdinate(long arg0, long arg1, double arg2, [ retval, out ] int*SWIG_result_ptr);
    HRESULT getX(long arg0, [ retval, out ] double*SWIG_result_ptr);
    HRESULT getY(long arg0, [ retval, out ] double*SWIG_result_ptr);
    HRESULT getZ(long arg0, [ retval, out ] double*SWIG_result_ptr);
    HRESULT getOrdinate(long arg0, long arg1, [ retval, out ] double*SWIG_result_ptr);
    HRESULT getSize([ retval, out ] int*SWIG_result_ptr);
    HRESULT getDimensions([ retval, out ] int*SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(c3206b4f-14c9-5199-8fd8-078da5d9a665),
    dual
  ]
  interface ICoordinateSequenceStatic : IDispatch {
    HRESULT new_CoordinateSequence(long arg0, long arg1, [ retval, out ] ICoordinateSequence **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(1dbce943-7d17-548e-a522-6f7d9cff7de4),
    dual
  ]
  interface IGeometry : IDispatch {
    HRESULT clone([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT geomType([ retval, out ] BSTR*SWIG_result_ptr);
    HRESULT typeId([ retval, out ] int*SWIG_result_ptr);
    HRESULT normalize();
    HRESULT getSRID([ retval, out ] int*SWIG_result_ptr);
    HRESULT setSRID(int arg0);
    HRESULT getDimensions([ retval, out ] long*SWIG_result_ptr);
    HRESULT getNumGeometries([ retval, out ] long*SWIG_result_ptr);
    HRESULT intersection(IGeometry * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT buffer(double arg0, int arg1, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT convexHull([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT difference(IGeometry * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT symDifference(IGeometry * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT boundary([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT Union(IGeometry * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT pointOnSurface([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT getCentroid([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT getEnvelope([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT relate(IGeometry * arg0, [ retval, out ] BSTR*SWIG_result_ptr);
    HRESULT lineMerge([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT simplify(double arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT topologyPreserveSimplify(double arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT relatePattern(IGeometry * arg0, BSTR arg1, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT disjoint(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT touches(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT intersects(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT crosses(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT within(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT contains(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT overlaps(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT equals(IGeometry * arg0, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT equalsExact(IGeometry * arg0, double arg1, [ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT isEmpty([ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT isValid([ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT isSimple([ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT isRing([ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT hasZ([ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT area([ retval, out ] double*SWIG_result_ptr);
    HRESULT length([ retval, out ] double*SWIG_result_ptr);
    HRESULT distance(IGeometry * arg0, [ retval, out ] double*SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(9172157d-c90f-5565-add0-d509c5a60549),
    dual
  ]
  interface IPoint : IGeometry {
    HRESULT getCoordSeq([ retval, out ] ICoordinateSequence **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(98752de3-4684-5906-8488-2b9dfb0c91dd),
    dual
  ]
  interface ILineString : IGeometry {
    HRESULT getCoordSeq([ retval, out ] ICoordinateSequence **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(b64cf891-a616-57ac-a25c-e9ea10c1e27c),
    dual
  ]
  interface ILinearRing : IGeometry {
    HRESULT getCoordSeq([ retval, out ] ICoordinateSequence **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(d21be932-9692-5899-b34c-23599442a29b),
    dual
  ]
  interface IPolygon : IGeometry {
    HRESULT getExteriorRing([ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT getNumInteriorRings([ retval, out ] long*SWIG_result_ptr);
    HRESULT getInteriorRingN(long arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(89b326e7-d823-5a4e-9201-46d8c4828181),
    dual
  ]
  interface IGeometryCollection : IGeometry {
    HRESULT getGeometryN(long arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(a73af551-cb91-5877-8027-c9126dd5119f),
    dual
  ]
  interface IMultiPoint : IGeometryCollection {
  };

  [
    object,
    local,
    uuid(9473df4e-61ce-5b5b-a5f0-0f54432473bf),
    dual
  ]
  interface IMultiLineString : IGeometryCollection {
  };

  [
    object,
    local,
    uuid(066c9e59-826c-5868-8a06-40564bdaeae1),
    dual
  ]
  interface IMultiLinearRing : IGeometryCollection {
  };

  [
    object,
    local,
    uuid(a30c8553-a922-5421-9260-eae874a745f4),
    dual
  ]
  interface IMultiPolygon : IGeometryCollection {
  };

  [
    object,
    local,
    uuid(b9456944-09f2-5e98-aae6-eb4e90bc48bd),
    dual
  ]
  interface IWktReader : IDispatch {
    HRESULT read(BSTR arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(7af915c7-1c12-5bca-b286-5a50021bbbb4),
    dual
  ]
  interface IWktReaderStatic : IDispatch {
    HRESULT new_WktReader([ retval, out ] IWktReader **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(b82bf568-d1c0-58f4-87fb-90a3f3083ca9),
    dual
  ]
  interface IWktWriter : IDispatch {
    HRESULT write(IGeometry * arg0, [ retval, out ] BSTR*SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(f16294bb-ac1d-5e93-b084-1281d89c0006),
    dual
  ]
  interface IWktWriterStatic : IDispatch {
    HRESULT new_WktWriter([ retval, out ] IWktWriter **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(b3b28a97-96f7-556f-a8cf-7f2dfad1d48d),
    dual
  ]
  interface IWkbReader : IDispatch {
//    HRESULT read(ISWIGTYPE_p_unsigned_char * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
//    HRESULT readHEX(ISWIGTYPE_p_unsigned_char * arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT read(VARIANT arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
    HRESULT readHEX(VARIANT arg0, [ retval, out ] IGeometry **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(ea584621-dee3-5230-bd48-67236819201e),
    dual
  ]
  interface IWkbReaderStatic : IDispatch {
    HRESULT new_WkbReader([ retval, out ] IWkbReader **SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(d8ecd1f7-b5d5-5bf1-9195-af9de53ed2a7),
    dual
  ]
  interface IWkbWriter : IDispatch {
    HRESULT getOutputDimension([ retval, out ] int*SWIG_result_ptr);
    HRESULT setOutputDimension(int arg0);
    HRESULT getByteOrder([ retval, out ] int*SWIG_result_ptr);
    HRESULT setByteOrder(int arg0);
    HRESULT getIncludeSRID([ retval, out ] VARIANT_BOOL*SWIG_result_ptr);
    HRESULT setIncludeSRID(VARIANT_BOOL arg0);
//    HRESULT write(IGeometry * arg0, [ retval, out ] ISWIGTYPE_p_unsigned_char **SWIG_result_ptr);
//    HRESULT writeHEX(IGeometry * arg0, [ retval, out ] ISWIGTYPE_p_unsigned_char **SWIG_result_ptr);
    HRESULT write(IGeometry * arg0, [ retval, out ] VARIANT *SWIG_result_ptr);
    HRESULT writeHEX(IGeometry * arg0, [ retval, out ] VARIANT *SWIG_result_ptr);
  };

  [
    object,
    local,
    uuid(22962328-c01d-50d8-a51d-34d0b01c5623),
    dual
  ]
  interface IWkbWriterStatic : IDispatch {
    HRESULT new_WkbWriter([ retval, out ] IWkbWriter **SWIG_result_ptr);
  };

//  [
//    object,
//    local,
//    uuid(0211390a-7a8f-5e7d-acaa-1106f0f1084e)
//  ]
//  interface ISWIGTYPE_p_unsigned_char : IUnknown {
//  };
//
//  [
//    object,
//    local,
//    uuid(bbf7519b-84a5-536c-a939-9d7b75ce6e9f)
//  ]
//  interface ISWIGTYPE_p_p_GeosLinearRing : IUnknown {
//  };

};
